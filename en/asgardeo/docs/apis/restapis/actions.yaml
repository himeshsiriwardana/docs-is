openapi: 3.0.0
info:
  version: v1
  title: Asgardeo - Action Management Rest API
  description:
    "This is the RESTful API for managing actions for an organization in Asgardeo. \n
    This API allows to create, retrieve, update and delete actions. \n\n
    To access Action Management APIs in Asgardeo, you need to first [get an access token](https://wso2.com/asgardeo/docs/apis/authentication/#get-an-access-token) from your organization."
servers:
  - url: 'https://api.asgardeo.io/t/{organization-name}/api/server/v1'
security:
  - OAuth2: []
paths:
  /actions/types:
    get:
      tags:
      - Actions Endpoint
      summary: List Action Types
      description: "This API returns the detailed summary of the action types.\n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_view``\n\n"
      operationId: getActionTypes
      responses:
        '200':
          description: Action Types are found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypesResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/types' \
            -H 'Authorization: Bearer {bearer_token}'

  /actions/{actionType}:
    post:
      tags:
        - Actions Endpoint
      summary: Add Action
      description: "This API creates an action and returns the action details along with the action's unique ID.\n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_create``\n\n"
      operationId: createAction
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionModel'
        description: This represents the information of the action to be created.
        required: true
      responses:
        '201':
          description: Action is created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}' \
            -H 'Authorization: Bearer {bearer_token}' \
            -H 'Content-Type: application/json' \
            -d '{
                "name": "Access Token Pre Issue",
                "description": "This action invokes before issuing an access token.",
                "endpoint": {
                    "uri": "https://myextension.com/token",
                    "authentication": {
                        "properties": {
                            "username": "auth_username",
                            "password": "auth_password"
                        },
                        "type": "BASIC"
                    }
                }
            }'
      x-codegen-request-body-name: body

    get:
      tags:
        - Actions Endpoint
      summary: List Actions
      description: "This API returns actions according to the action type. \n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_view``\n\n"
      operationId: getActionsByActionType
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
      responses:
        '200':
          description: Actions are found for the given action type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponseList'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}' \
            -H 'Authorization: Bearer {bearer_token}'

  /actions/{actionType}/{actionId}:
    get:
      tags:
        - Actions Endpoint
      operationId: getActionByActionId
      summary: Retrieve Action by ID
      description: "This API provides the capability to retrieve the action by action Id. \n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_view``\n\n"
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
        - name: actionId
          in: path
          description: Unique identifier of the action.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Action is found for the given action type and id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}/{actionId}' \
            -H 'Authorization: Bearer {bearer_token}'
                
    patch:
      tags:
        - Actions Endpoint
      summary: Update Action
      description: "This API updates an action and returns the updated action. \n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_update``\n\n"
      operationId: updateAction
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
        - name: actionId
          in: path
          description: Unique identifier of the action.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionUpdateModel'
        description: This represents the action to be updated.
        required: true
      responses:
        '200':
          description: Action is Updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request PATCH 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}/{actionId}' \
            -H 'Content-Type: application/json' \
            -H 'Accept: application/json' \
            -H 'Authorization: Bearer {bearer_token}' \
            -d '{
                "name": "Access Token Pre Issue action",
                "description": "This is the configuration of pre-action for issuing access token from myextensions.com.",
                "endpoint": {
                    "uri": "http://myextensions.com/access-token",
                    "authentication": {
                        "type": "API_KEY",
                        "properties": {
                            "header": "sample_header",
                            "value": "sample_value"
                        }
                    }
                }
            }'
      x-codegen-request-body-name: body

    delete:
      tags:
        - Actions Endpoint
      summary: Delete Action
      description: "This API deletes an action using the action's type and unique ID. \n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_delete``\n\n"      
      operationId: deleteAction
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
        - name: actionId
          in: path
          description: Unique identifier of the action.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully Deleted
          content: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request DELETE 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}/{actionId}' \
            -H 'Authorization: Bearer {bearer_token}'

  /actions/{actionType}/{actionId}/activate:
    post:
      tags:
        - Actions Endpoint
      summary: Activate Action
      description: "This API activates an action using the action's type and unique ID. \n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_update``\n\n"  
      operationId: activateAction
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
        - name: actionId
          in: path
          description: Unique identifier of the action.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Action is activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionBasicResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request POST 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}/{actionId}/activate' \
            -H 'Authorization: Bearer {bearer_token}'

  /actions/{actionType}/{actionId}/deactivate:
    post:
      tags:
        - Actions Endpoint
      summary: Deactivate Action
      description: "This API deactivates an action using the action's type and unique ID. \n\n
        <b>Scope (Permission) required:</b> ``internal_action_mgt_update``\n\n"  
      operationId: deactivateAction
      parameters:
        - name: actionType
          in: path
          description: Name of the Action Type.
          required: true
          schema:
            enum:
              - preIssueAccessToken
        - name: actionId
          in: path
          description: Unique identifier of the action.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Action is deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionBasicResponseInactive'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Curl
          source: |
            curl --location --request POST 'https://api.asgardeo.io/t/{organization-name}/api/server/v1/actions/{actionType}/{actionId}/deactivate' \
            -H 'Authorization: Bearer {bearer_token}'

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://api.asgardeo.io/t/{org-name}/oauth2/authorize'
          tokenUrl: 'https://api.asgardeo.io/t/{org-name}/oauth2/token'
          scopes: 
            read: internal_action_mgt_view
            write: internal_action_mgt_create
            update: internal_action_mgt_update
            delete: internal_action_mgt_delete

  schemas:
    ActionModel:
      type: object
      required:
        - name
        - endpoint
      properties:
        name:
          type: string
          example: Access Token Pre Issue
          minLength: 1
          maxLength: 255
          description: Name of the action.
        description:
          type: string
          example: This action invokes before issuing an access token.
          maxLength: 255
          description: Description of the action.
        endpoint:
          $ref: '#/components/schemas/Endpoint'

    Endpoint:
      type: object
      description: Endpoint configurations of the action.
      required:
        - uri
        - authentication
      properties:
        uri:
          type: string
          example: https://myextension.com/token
          description: HTTPS URI of the endpoint.
        authentication:
          $ref: '#/components/schemas/Authentication'

    EndpointResponse:
      type: object
      description: Endpoint configurations of the action.
      required:
        - uri
        - authentication
      properties:
        uri:
          type: string
          example: https://myextension.com/token
          description: HTTPS URI of the endpoint.
        authentication:
          $ref: '#/components/schemas/AuthenticationTypeResponse'

    ActionResponse:
      type: object
      properties:
        id:
          type: string
          example: '24f64d17-9824-4e28-8413-de45728d8e84'
          description: Unique identifier of the action.
        type:
          type: string
          enum:
            - PRE_ISSUE_ACCESS_TOKEN
          example: PRE_ISSUE_ACCESS_TOKEN
          description: Action Type.
        name:
          type: string
          example: Access Token Pre Issue
          minLength: 1
          maxLength: 255
          description: Name of the action.
        description:
          type: string
          example: This action invokes before issuing an access token.
          maxLength: 255
          description: Description of the action.
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          example: ACTIVE
          description: Status of the action.
        endpoint:
          $ref: '#/components/schemas/EndpointResponse'

    ActionBasicResponse:
      type: object
      properties:
        id:
          type: string
          example: '24f64d17-9824-4e28-8413-de45728d8e84'
          description: Unique identifier of the action.
        type:
          type: string
          enum:
            - PRE_ISSUE_ACCESS_TOKEN
          example: PRE_ISSUE_ACCESS_TOKEN
          description: Action Type.
        name:
          type: string
          example: Access Token Pre Issue
          minLength: 1
          maxLength: 255
          description: Name of the action.
        description:
          type: string
          example: This action invokes before issuing an access token.
          maxLength: 255
          description: Description of the action.
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: Status of the action.

    ActionResponseList:
      type: array
      items:
        $ref: '#/components/schemas/ActionResponse'

    ActionTypesResponse:
      type: array
      items:
        $ref: '#/components/schemas/ActionTypesResponseItem'

    ActionTypesResponseItem:
      type: object
      properties:
        type:
          type: string
          enum:
            - PRE_ISSUE_ACCESS_TOKEN
          description: Action Type.
        displayName:
          type: string
          example: "Pre Issue Access Token."
          description: "Display name of the action type."
        description:
          type: string
          example: "Extension point configuration for Pre Issue Access Token."
          description: "Description of the action type."
        count:
          type: integer
          example: 1
          description: "Number of actions configured under the action type."
        self:
          type: string
          example: "/t/{organization-name}/api/server/v1/actions/preIssueAccessToken"
          description: "API endpoint referring to the location of the given action type."

    AuthenticationTypeResponse:
      type: object
      description: Authentication configurations of the action.
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - NONE
            - BEARER
            - API_KEY
            - BASIC
          example: BASIC
          description: Type of the authentication.

    ActionUpdateModel:
      type: object
      properties:
        name:
          type: string
          example: Access Token Pre Issue
          minLength: 1
          maxLength: 255
          description: Updating name of the action.
        description:
          type: string
          example: This action invokes before issuing an access token.
          maxLength: 255
          description: Updating description of the action.
        endpoint:
          $ref: '#/components/schemas/EndpointUpdateModel'

    EndpointUpdateModel:
      description: Updating endpoint configurations of the action.
      type: object
      properties:
        uri:
          type: string
          example: https://myextension.com/token
          description: Updating HTTPS URI of the endpoint.
        authentication:
          $ref: '#/components/schemas/Authentication'

    ActionBasicResponseInactive:
      allOf:
        - $ref: '#/components/schemas/ActionBasicResponse'
        - type: object
          properties:
            status:
              type: string
              enum:
                - INACTIVE

    None:
      type: object
      properties:
        properties:
          type: object
    Basic:
      type: object
      properties:
        properties:
          type: object
          description: Properties of Basic authentication type.
          required:
            - username
            - password
          properties:      
            username:
              type: string
              example: 'auth_username'
              description: Username.
            password:
              type: string
              example: 'auth_password'
              description: Password.
    ApiKey:
      type: object
      properties:
        properties:
          type: object
          description: Properties of API Key authentication type.
          required:
            - header
            - value
          properties: 
            header:
              type: string
              example: 'auth_header'
              description: Header.
            value:
              type: string
              example: 'auth_value'
              description: Value.
    Bearer:
      type: object
      properties:
        properties:
          type: object
          description: Properties of Bearer authentication type.
          required:
            - accessToken
          properties: 
            accessToken:
              type: string
              example: '0d6fed02-eac0-332b-8998-213a543139a0'
              description: Access Token.

    NoAuthentication:
      type: object
      allOf:
        - $ref: '#/components/schemas/None'
        - type: object
          properties:
            type:
              type: string
              enum:
                - NONE

    BasicAuthentication:
      type: object
      allOf:
        - $ref: '#/components/schemas/Basic'
        - type: object
          properties:
            type:
              type: string
              enum:
                - BASIC
              description: Type of the authentication.

    ApiKeyAuthentication:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiKey'
        - type: object
          properties:
            type:
              type: string
              enum:
                - API_KEY
              description: Type of the authentication.

    BearerAuthentication:
      type: object
      allOf:
        - $ref: '#/components/schemas/Bearer'
        - type: object
          properties:
            type:
              type: string
              enum:
                - BEARER
              description: Type of the authentication.
    
    Authentication:
      description: Authentication configurations of the action.
      oneOf:
        - $ref: '#/components/schemas/BasicAuthentication'
        - $ref: '#/components/schemas/ApiKeyAuthentication'
        - $ref: '#/components/schemas/BearerAuthentication'
        - $ref: '#/components/schemas/NoAuthentication'

    Error:
      type: object
      properties:
        code:
          type: string
          example: AAA-00000
        message:
          type: string
          example: Some error message.
        description:
          type: string
          example: Some error description.
        traceId:
          type: string
          example: e0fbcfeb-3617-43c4-8dd0-7b7d38e13047
